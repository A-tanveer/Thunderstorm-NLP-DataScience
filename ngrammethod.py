x = 0


# this method checks if there a number present in the gram
def check_number(number, gram):
    # print('i am here')
    for i in number:
        if i in gram:
            global x
            x = number.index(i)
            # print(x)
            return True
    return False
    pass


def text_processor():
    from nltk import ngrams

    f = open('temp.txt', encoding="utf8")
    text = f.read()
    f.close()
    # print(text)

    numeric_number = ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯', '১০', '১১', '১২', '১৪', '১৫', '১৬', '১৭', '১৮',
                      '১৯', '২০', '২১', '২২', '২৩', '২৪', '২৫', '২৬', '২৭', '২৮', '২৯', '৩০', '৩১', '৩২', '৩৩',
                      '৩৪', '৩৫', '৩৬', '৩৮', '৩৯', '৪০', '৪১', '৪২', '৪৩', '৪৪', '৪৫', '৪৬', '৪৭', '৪৮', '৪৯']
    verbal_number = ['শূন্য', 'এক', 'দুই', 'তিন', 'চার', 'পাঁচ', 'ছয়', 'সাত', 'আট', 'নয়', 'দশ', 'এগার', 'বার', 'তের',
                     'চৌদ্দ', 'পনের', 'ষোল', 'সতের', 'আঠার', 'ঊনিশ', 'বিশ', 'একুশ', 'বাইশ', 'তেইশ', 'চব্বিশ', 'পঁচিশ',
                     'ছাব্বিশ', 'সাতাশ', 'আঠাশ', 'ঊনত্রিশ', 'ত্রিশ', 'একত্রিশ', 'বত্রিশ', 'তেত্রিশ', 'চৌত্রিশ',
                     'পঁয়ত্রিশ', 'ছত্রিশ', 'সাঁইত্রিশ', 'আটত্রিশ', 'ঊনচল্লিশ', 'চল্লিশ', 'একচল্লিশ', 'বিয়াল্লিশ',
                     'তেতাল্লিশ', 'চুয়াল্লিশ', 'পঁয়তাল্লিশ', 'ছেচল্লিশ', 'সাতচল্লিশ', 'আটচল্লিশ', 'ঊনপঞ্চাশ']
    verbal_number2 = ['শূন্য', 'একজনের', 'দুইজনের', 'তিনজনের', 'চারজনের', 'পাঁচজনের', 'ছয়জনের', 'সাতজনের', 'আটজনের',
                      'নয়জনের', 'দশজনের', 'এগারজনের', 'বারজনের', 'তেরজনের', 'চৌদ্দজনের', 'পনেরজনের', 'ষোলজনের',
                      'সতেরজনের', 'আঠারজনের', 'ঊনিশজনের', 'বিশজনের', 'একুশজনের', 'বাইশজনের', 'তেইশজনের', 'চব্বিশজনের',
                      'পঁচিশজনের', 'ছাব্বিশজনের', 'সাতাশজনের', 'আঠাশজনের', 'ঊনত্রিশজনের', 'ত্রিশজনের', 'একত্রিশজনের',
                      'বত্রিশজনের', 'তেত্রিশজনের', 'চৌত্রিশজনের', 'পঁয়ত্রিশজনের', 'ছত্রিশজনের', 'সাঁইত্রিশজনের',
                      'আটত্রিশজনের', 'ঊনচল্লিশজনের', 'চল্লিশজনের', 'একচল্লিশজনের', 'বিয়াল্লিশজনের', 'তেতাল্লিশজনের',
                      'চুয়াল্লিশজনের', 'পঁয়তাল্লিশজনের', 'ছেচল্লিশজনের', 'সাতচল্লিশজনের', 'আটচল্লিশজনের', 'ঊনপঞ্চাশজনের']
    verbal_number3 = ['শূন্য', 'একজনের', 'দুজনের', 'তিনজনের', 'চারজনের', 'পাঁচজনের', 'ছয়জনের', 'সাতজনের', 'আটজনের',
                      'নয়জনের', 'দশজনের', 'এগারজনের', 'বারজনের', 'তেরজনের', 'চৌদ্দজনের', 'পনেরজনের', 'ষোলজনের',
                      'সতেরজনের', 'আঠারজনের', 'ঊনিশজনের', 'বিশজনের']
    verbal_number4 = ['শূন্যজন', 'একজন', 'দুইজন', 'তিনজন', 'চারজন', 'পাঁচজন', 'ছয়জন', 'সাতজন', 'আটজন', 'নয়জন', 'দশজন',
                      'এগারজন', 'বারজন', 'তেরজন', 'চৌদ্দজন', 'পনেরজন', 'ষোলজন', 'সতেরজন', 'আঠারজন', 'ঊনিশজন', 'বিশজন',
                      'একুশজন', 'বাইশজন', 'তেইশজন', 'চব্বিশজন', 'পঁচিশজন', 'ছাব্বিশজন', 'সাতাশজন', 'আঠাশজন',
                      'ঊনত্রিশজন', 'ত্রিশজন', 'একত্রিশজন', 'বত্রিশজন', 'তেত্রিশজন', 'চৌত্রিশজন',
                      'পঁয়ত্রিশজন', 'ছত্রিশজন', 'সাঁইত্রিশজন', 'আটত্রিশজন', 'ঊনচল্লিশজন', 'চল্লিশজন', 'একচল্লিশজন',
                      'বিয়াল্লিশজন', 'তেতাল্লিশজন', 'চুয়াল্লিশজন', 'পঁয়তাল্লিশজন', 'ছেচল্লিশজন', 'সাতচল্লিশজন',
                      'আটচল্লিশজন', 'ঊনপঞ্চাশজন']

    tag2 = ['নিহত', 'মৃত্যু', 'জন']
    tag = ['বজ্র', 'বজ্রপাত', 'বজ্রপাতে', 'বজ্রপাত,', '~~বজ্র', '~~বজ্রপাত', '~~বজ্রপাতে', '~~বজ্রপাত,']

    # tgalist2 and taglist3 is to resolve the cases where number of casualties is not provided
    # taglist2 = ['দম্পতি', 'মা-মেয়ে', 'ভাই-বোন', 'মামা-ভাগ্নে']
    # taglist3 = ['সভাপতি', 'গৃহবধূ', 'শিশু', 'কৃষক']

    is_thunder = False
    for i in tag:
        if i in text:
            is_thunder = True

    total = 0

    if is_thunder:
        # split text into nGrams(7)
        svn_grams = ngrams(text.split(), 7)

        # finding result
        for gram in svn_grams:

            # looking for casualty determining words
            if gram[3] in tag2:
                # look for number of casualties
                got_number = check_number(numeric_number, gram)

                if not got_number:
                    got_number = check_number(verbal_number, gram)
                if not got_number:
                    got_number = check_number(verbal_number2, gram)
                if not got_number:
                    got_number = check_number(verbal_number3, gram)
                if not got_number:
                    got_number = check_number(verbal_number4, gram)

                if got_number is True and x >= total:
                    total = x

    # # getting date of publication
    #     if gram[3] in dateList1:
    #         dateOfNews = gram[4]
    #     elif gram[2] in dateList2:
    #         dateOfNews = gram[4] + " " + gram[5] + " " + gram[6]
    #
    # output = dateOfNews + " " + repr(total) + "\n

    return total
